<script>
  function getToken(renew) {
    let url = (typeof renew == 'undefined') ? '/user/getToken' : '/user/token';
    window.fetch(url, {
      method: 'POST',
      credentials: 'include'
    })
    .then(function(response) {
      return response.json();
    })
    .then(function(json) {
      let token = document.getElementById('token');
      let expires = document.getElementById('expires');
      token.value = json.data.token;
      expires.value = json.data.expires.slice(0, 19).replace('T', ' ');
      localStorage.setItem('token',json.data.token);
      localStorage.setItem('expires',json.data.expires);
    })
    .catch(function(ex) {
      console.error(ex);
    });
  }
  getToken(); // request token on login
</script>
<h2 class="content-head is-center">API Token</h2>
<div class="pure-g">
    <div class="l-box-lrg pure-u-1 pure-u-md-4-24"></div>
    <div class="l-box-lrg pure-u-1 pure-u-md-16-24">
        <p class="is-center">This token must be present in an Authorization header as a Bearer token for each request to /api/. <a href="https://wp-oauth.com/kb/step-by-step-using-bearer-token-authorization-for-wp-rest-api/" target="_blank">See here for the best short explaination & example I could find.</a></p>
        <p class="is-center">The API only accepts POST requests (which GraphiQL sends). GraphiQL is mapped to /docs/ and requires both a valid session <b>and</b> a valid token. However, you will need <a href="https://chrome.google.com/webstore/detail/modheader/idgpnmonknjnojddfkpgkljpfnnfcklj" target="_blank">the ModHeader Chrome Extentsion</a> (or similar) to kill the "Unathorized" response on the right. I <b>highly</b> recommend an API tool like <a href="https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop" target="_blank">Postman Chrome Extension</a> or <a href="https://www.getpostman.com" target="_blank">Postman Standalone App</a> to test <b>and</b> to use /docs/ (the GraphiQL UI) I recommend</p>
        <form class="pure-form pure-form-stacked is-center">
            <fieldset>
                <label for="token">Token </label>
                <input class="pure-u-1" id="token" type="text" readonly="true">
                <label for="expires">Expires </label>
                <input class="pure-u-1" id="expires" type="text" readonly="true">
                <button onclick="getToken(true); return false;" id="renew" class="pure-button">Renew Token</button>
            </fieldset>
        </form>
        <p class="is-center">Tokens expire after 7 days maximum and must be renewed. Accesing this dashboard is the only way to renew a token after it has expired. Otherwise tokens may be renewed programmatically before their expiration.</p>
    </div>
</div>
<script>
document.getElementById('token').value = localStorage.getItem('token');
document.getElementById('expires').value = localStorage.getItem('expires').slice(0, 19).replace('T', ' ');
</script>
